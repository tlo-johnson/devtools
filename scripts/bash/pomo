#!/bin/bash
# POMODORO in YA TerMINAL ;)

WORK_DURATION_IN_SECONDS=$((60*60)) # 60 minutes
LONG_BREAK_DURATION_IN_SECONDS=$((30*60)) # 30 minutes
SHORT_BREAK_DURATION_IN_SECONDS=$((10*60)) # 10 minutes

function pomo {
    RED='\033[0;31m'
    NC='\033[0m' # No Color
    ORANGE='\033[0;33m'

    if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
        echo "usage: pomo       25 minute cycle"
        echo -e "   or: pomo [break]['_message_']  see options below\n"
        echo "Options:"
        echo "  d: timer duration in minutes"
        echo "  s: 05 minute break"
        echo "  l:  15 minute break"
        echo "  message: Your message to display"
        return
    fi

    if [[ "$1" == "-v" ]] || [[ "$1" == "--version" ]]; then
        echo -e "${ORANGE}POMODORO TIMER BY RUKSHAN"
        echo "  v: 1.0.0.1"
        echo "  twitter: @justruky"
        echo "  blog: rukshn.github.io"
        echo -e "  email: arkruka[@]gmail.com"
        return
    fi

    TITLE="POMODORO TIMER"
    MESSAGE=""
    ICON="face-cool"
    BEEP="_alarm 400 200"
    TIMER=$WORK_DURATION_IN_SECONDS

    while :
    do
        case "$1" in
        -d | --duration)
            TIMER=$(($2*60))
            shift 2
            ;;
        -l | --long-break)
            MESSAGE="Long is break over, back to work"
            TIMER=$LONG_BREAK_DURATION_IN_SECONDS
            shift
            ;;
        -s | --short-break)
            MESSAGE="Short is break over, back to work"
            TIMER=$SHORT_BREAK_DURATION_IN_SECONDS
            shift
            ;;
        -*)
          echo "Error: Unknown option: $1" >&2
          return 1
          ;;
        *)  # No more options
          break
          ;;
        esac
    done

    if [ -n "$1" ]; then
        MESSAGE="$1"
    elif [ -z "$MESSAGE" ]; then
        MESSAGE="It's time to take a break"
    fi

    echo -e "${ORANGE}Timer set for $(($TIMER/60)) minutes"

    # LINUX users
    if [[ "$(uname)" == "Linux" ]]; then
        sleep $TIMER && notify-send "$TITLE" "$MESSAGE" --urgency critical --icon=$ICON && $BEEP &
        disown
    # MAC users
    elif [[ "$(uname)" == "Darwin" ]]; then
        sleep $TIMER && terminal-notifier -message '$MESSAGE' -title 'Pomodoro' --subtitle '$TITLE' && $BEEP &
        disown
    else
        echo "Sorry! Only Linux or Mac";
    fi
}

_alarm() {
    if [[ "$(uname)" == "Linux" ]]; then
        paplay notification.ogg
    elif [[ "$(uname)" == "Darwin" ]]; then
        say -v bells 'beep'
    fi
}
